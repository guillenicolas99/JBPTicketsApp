@model JBPTicketsApp.Models.ViewModels.RegistrarPersonaViewModel

@{
    ViewData["Title"] = "Agregar Discípulo";
}

<form asp-action="Create" class="card shadow-lg">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="card-body row align-items-end">
        <div class="col-md-3 mb-3">
            Nombre:
            <input class="form-control" id="nombre" />
        </div>
        <div class="col-md-3 mb-3">
            Red:
            <select class="form-control" asp-items="ViewBag.IdRed" id="red" >
                <option selected disabled value="">Seleccione una red</option>
            </select>
        </div>
        <div class="col-md-3 mb-3">
            Título:
            <select class="form-control" asp-items="ViewBag.IdNivelLiderazgo" id="titulo">
                <option selected disabled value="">Seleccione el nivel de liderazgo</option>
            </select>
        </div>
        <div class="col-md-3 mb-3">
            <button type="button" id="btn-lista" class="btn btn-success">Agregar</button>
        </div>
        <span class="alert alert-danger error-message d-none">Seleccione un valores</span>
        @if (ViewBag.message != null)
        {
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                @ViewBag.message
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }
    </div>

    <table class="table table-hover table-striped table-primary">
        <thead>
            <tr>
                <td>#</td>
                <td>Nombre</td>
                <td>Red</td>
                <td>Nivel de Liderazgo</td>
            </tr>
        </thead>
        <tbody class="tbody">

        </tbody>
    </table>
    <button class="btn btn-success btn-submit" type="submit">Guardar</button>
</form>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}


<script>
    const btnListarPersona = document.getElementById("btn-lista")
    let i = 1
    let num = 0
    const btnSubmit = document.querySelector('.btn-submit')
    btnSubmit.classList.add('disabled')

    btnListarPersona.addEventListener('click', () =>{
        let nombreEl = document.getElementById("nombre")
        let redEl = document.getElementById("red")
        let tituloEl = document.getElementById("titulo")
        const cardBody = document.querySelector('.card-body')
        const errMessage = document.querySelector('.error-message')

        if (nombreEl.value == "" || redEl.value == "" || tituloEl.value == "") {
            errMessage.classList.remove('d-none')
            return
        }
        errMessage.classList.add('d-none')

        let tBodyEl = document.querySelector('.tbody')
        let trEl = document.createElement("tr")
        let tdNumero = document.createElement("td")
        let tdNombre = document.createElement("td")
        let tdRed = document.createElement("td")
        let tdTitulo = document.createElement("td")

        trEl.appendChild(tdNumero)
        trEl.appendChild(tdNombre)
        trEl.appendChild(tdRed)
        trEl.appendChild(tdTitulo)
        tBodyEl.appendChild(trEl)

        tdNumero.innerHTML = i
        tdNombre.innerHTML = nombreEl.value
        tdRed.innerHTML = redEl.options[redEl.selectedIndex].text
        tdTitulo.innerHTML = tituloEl.options[tituloEl.selectedIndex].text

        //AGREGAMOS HIDDENS
        let hiddenIndex = document.createElement('input')
        let hiddenNombre = document.createElement('input')
        let hiddenTitulo = document.createElement('input')
        let hiddenRed = document.createElement('input')

        hiddenIndex.name = "Persona.index"
        hiddenIndex.value = num
        hiddenIndex.type = "hidden"

        hiddenNombre.name = `Persona[${num}].Nombre`
        hiddenNombre.value = nombreEl.value
        hiddenNombre.type = "hidden"

        hiddenTitulo.name = `Persona[${num}].IdTitulo`
        hiddenTitulo.value = tituloEl.value
        hiddenTitulo.type = "hidden"

        hiddenRed.name = `Persona[${num}].IdRed`
        hiddenRed.value = redEl.value
        hiddenRed.type = "hidden"

        tBodyEl.appendChild(hiddenIndex)
        tBodyEl.appendChild(hiddenNombre)
        tBodyEl.appendChild(hiddenRed)
        tBodyEl.appendChild(hiddenTitulo)

        document.getElementById("nombre").value = ""
        document.getElementById("red").value = ""
        document.getElementById("titulo").value = ""
        i++
        num++
        if (num > 0) {
            btnSubmit.classList.remove('disabled')
        }
    })
</script>