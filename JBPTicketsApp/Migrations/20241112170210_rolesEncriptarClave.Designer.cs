// <auto-generated />
using System;
using JBPTicketsApp.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JBPTicketsApp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241112170210_rolesEncriptarClave")]
    partial class rolesEncriptarClave
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("JBPTicketsApp.Models.Entities.Categoria", b =>
                {
                    b.Property<int>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCategoria"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCategoria");

                    b.ToTable("Categorias");

                    b.HasData(
                        new
                        {
                            IdCategoria = 1,
                            Nombre = "Premium"
                        },
                        new
                        {
                            IdCategoria = 2,
                            Nombre = "VIP"
                        },
                        new
                        {
                            IdCategoria = 3,
                            Nombre = "General"
                        });
                });

            modelBuilder.Entity("JBPTicketsApp.Models.Entities.Evento", b =>
                {
                    b.Property<int>("IdEvento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEvento"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdEvento");

                    b.ToTable("Eventos");
                });

            modelBuilder.Entity("JBPTicketsApp.Models.Entities.NivelLiderazgo", b =>
                {
                    b.Property<int>("IdNivelLiderazgo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdNivelLiderazgo"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdNivelLiderazgo");

                    b.ToTable("NivelesLiderazgo");

                    b.HasData(
                        new
                        {
                            IdNivelLiderazgo = 1,
                            Nombre = "Sin Nivel"
                        },
                        new
                        {
                            IdNivelLiderazgo = 2,
                            Nombre = "Miembro"
                        },
                        new
                        {
                            IdNivelLiderazgo = 3,
                            Nombre = "Discipulo"
                        },
                        new
                        {
                            IdNivelLiderazgo = 4,
                            Nombre = "Líder de Casa de Paz"
                        },
                        new
                        {
                            IdNivelLiderazgo = 5,
                            Nombre = "Líder de Discípulo"
                        },
                        new
                        {
                            IdNivelLiderazgo = 6,
                            Nombre = "Diácono"
                        },
                        new
                        {
                            IdNivelLiderazgo = 7,
                            Nombre = "Anciano"
                        },
                        new
                        {
                            IdNivelLiderazgo = 8,
                            Nombre = "Efesio"
                        });
                });

            modelBuilder.Entity("JBPTicketsApp.Models.Entities.Persona", b =>
                {
                    b.Property<int>("IdPersona")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPersona"));

                    b.Property<int>("IdNivelLiderazgo")
                        .HasColumnType("int");

                    b.Property<int>("IdRed")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPersona");

                    b.HasIndex("IdNivelLiderazgo");

                    b.HasIndex("IdRed");

                    b.ToTable("Personas");

                    b.HasData(
                        new
                        {
                            IdPersona = 1,
                            IdNivelLiderazgo = 1,
                            IdRed = 1,
                            Nombre = "Sin asignar"
                        });
                });

            modelBuilder.Entity("JBPTicketsApp.Models.Entities.Red", b =>
                {
                    b.Property<int>("IdRed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRed"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdRed");

                    b.ToTable("Redes");

                    b.HasData(
                        new
                        {
                            IdRed = 1,
                            Nombre = "Sin red"
                        },
                        new
                        {
                            IdRed = 2,
                            Nombre = "Adonai"
                        },
                        new
                        {
                            IdRed = 3,
                            Nombre = "El Elyon"
                        },
                        new
                        {
                            IdRed = 4,
                            Nombre = "El Shaddai"
                        },
                        new
                        {
                            IdRed = 5,
                            Nombre = "Emmanuel"
                        },
                        new
                        {
                            IdRed = 6,
                            Nombre = "YAWHE"
                        });
                });

            modelBuilder.Entity("JBPTicketsApp.Models.Entities.Rol", b =>
                {
                    b.Property<int>("IdRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRol"));

                    b.Property<string>("NombreRol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdRol");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            IdRol = 1,
                            NombreRol = "Admin"
                        },
                        new
                        {
                            IdRol = 2,
                            NombreRol = "User"
                        },
                        new
                        {
                            IdRol = 3,
                            NombreRol = "Manager"
                        });
                });

            modelBuilder.Entity("JBPTicketsApp.Models.Entities.Ticket", b =>
                {
                    b.Property<int>("IdTicket")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTicket"));

                    b.Property<double?>("Abono")
                        .HasColumnType("float");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Descuento")
                        .HasColumnType("float");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaDescuento")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCategoria")
                        .HasColumnType("int");

                    b.Property<int>("IdEvento")
                        .HasColumnType("int");

                    b.Property<int?>("IdPersona")
                        .HasColumnType("int");

                    b.Property<double>("Precio")
                        .HasColumnType("float");

                    b.HasKey("IdTicket");

                    b.HasIndex("IdCategoria");

                    b.HasIndex("IdEvento");

                    b.HasIndex("IdPersona");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("JBPTicketsApp.Models.Entities.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdRol")
                        .HasColumnType("int");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUsuario");

                    b.HasIndex("IdRol");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            IdUsuario = 1,
                            Clave = "3b612c75a7b5048a435fb6ec81e52ff92d6d795a8b5a9c17070f6a63c97a53b2",
                            Correo = "admin@gmail.com",
                            IdRol = 1,
                            NombreUsuario = "Admin"
                        },
                        new
                        {
                            IdUsuario = 2,
                            Clave = "a61a8adf60038792a2cb88e670b20540a9d6c2ca204ab754fc768950e79e7d36",
                            Correo = "user@gmail.com",
                            IdRol = 2,
                            NombreUsuario = "User"
                        },
                        new
                        {
                            IdUsuario = 3,
                            Clave = "3b612c75a7b5048a435fb6ec81e52ff92d6d795a8b5a9c17070f6a63c97a53b2",
                            Correo = "manager@gmail.com",
                            IdRol = 3,
                            NombreUsuario = "Manager"
                        });
                });

            modelBuilder.Entity("JBPTicketsApp.Models.Entities.Persona", b =>
                {
                    b.HasOne("JBPTicketsApp.Models.Entities.NivelLiderazgo", "NivelLiderazgo")
                        .WithMany("Personas")
                        .HasForeignKey("IdNivelLiderazgo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JBPTicketsApp.Models.Entities.Red", "Red")
                        .WithMany("Personas")
                        .HasForeignKey("IdRed")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NivelLiderazgo");

                    b.Navigation("Red");
                });

            modelBuilder.Entity("JBPTicketsApp.Models.Entities.Ticket", b =>
                {
                    b.HasOne("JBPTicketsApp.Models.Entities.Categoria", "Categoria")
                        .WithMany("Tickets")
                        .HasForeignKey("IdCategoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JBPTicketsApp.Models.Entities.Evento", "Evento")
                        .WithMany("Tickets")
                        .HasForeignKey("IdEvento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JBPTicketsApp.Models.Entities.Persona", "Persona")
                        .WithMany("Tickets")
                        .HasForeignKey("IdPersona");

                    b.Navigation("Categoria");

                    b.Navigation("Evento");

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("JBPTicketsApp.Models.Entities.Usuario", b =>
                {
                    b.HasOne("JBPTicketsApp.Models.Entities.Rol", "Rol")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdRol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("JBPTicketsApp.Models.Entities.Categoria", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("JBPTicketsApp.Models.Entities.Evento", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("JBPTicketsApp.Models.Entities.NivelLiderazgo", b =>
                {
                    b.Navigation("Personas");
                });

            modelBuilder.Entity("JBPTicketsApp.Models.Entities.Persona", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("JBPTicketsApp.Models.Entities.Red", b =>
                {
                    b.Navigation("Personas");
                });

            modelBuilder.Entity("JBPTicketsApp.Models.Entities.Rol", b =>
                {
                    b.Navigation("Usuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
